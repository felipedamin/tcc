digraph {
n0 [label="root (CompilationUnit)"];
n1 [label="packageDeclaration (PackageDeclaration)"];
n0 -> n1;
n2 [label="name (Name)"];
n1 -> n2;
n3 [label="identifier='teste'"];
n2 -> n3;
n4 [label="types"];
n0 -> n4;
n5 [label="type (ClassOrInterfaceDeclaration)"];
n4 -> n5;
n6 [label="isInterface='false'"];
n5 -> n6;
n7 [label="name (SimpleName)"];
n5 -> n7;
n8 [label="identifier='MethodsExample'"];
n7 -> n8;
n9 [label="members"];
n5 -> n9;
n10 [label="member (FieldDeclaration)"];
n9 -> n10;
n11 [label="modifiers"];
n10 -> n11;
n12 [label="modifier (Modifier)"];
n11 -> n12;
n13 [label="keyword='PRIVATE'"];
n12 -> n13;
n14 [label="modifier (Modifier)"];
n11 -> n14;
n15 [label="keyword='STATIC'"];
n14 -> n15;
n16 [label="variables"];
n10 -> n16;
n17 [label="variable (VariableDeclarator)"];
n16 -> n17;
n18 [label="initializer (IntegerLiteralExpr)"];
n17 -> n18;
n19 [label="value='5'"];
n18 -> n19;
n20 [label="name (SimpleName)"];
n17 -> n20;
n21 [label="identifier='a'"];
n20 -> n21;
n22 [label="type (ClassOrInterfaceType)"];
n17 -> n22;
n23 [label="name (SimpleName)"];
n22 -> n23;
n24 [label="identifier='Integer'"];
n23 -> n24;
n25 [label="member (FieldDeclaration)"];
n9 -> n25;
n26 [label="modifiers"];
n25 -> n26;
n27 [label="modifier (Modifier)"];
n26 -> n27;
n28 [label="keyword='PRIVATE'"];
n27 -> n28;
n29 [label="modifier (Modifier)"];
n26 -> n29;
n30 [label="keyword='STATIC'"];
n29 -> n30;
n31 [label="variables"];
n25 -> n31;
n32 [label="variable (VariableDeclarator)"];
n31 -> n32;
n33 [label="initializer (IntegerLiteralExpr)"];
n32 -> n33;
n34 [label="value='5'"];
n33 -> n34;
n35 [label="name (SimpleName)"];
n32 -> n35;
n36 [label="identifier='b'"];
n35 -> n36;
n37 [label="type (ClassOrInterfaceType)"];
n32 -> n37;
n38 [label="name (SimpleName)"];
n37 -> n38;
n39 [label="identifier='Integer'"];
n38 -> n39;
n40 [label="member (MethodDeclaration)"];
n9 -> n40;
n41 [label="body (BlockStmt)"];
n40 -> n41;
n42 [label="statements"];
n41 -> n42;
n43 [label="statement (ExpressionStmt)"];
n42 -> n43;
n44 [label="expression (MethodCallExpr)"];
n43 -> n44;
n45 [label="name (SimpleName)"];
n44 -> n45;
n46 [label="identifier='println'"];
n45 -> n46;
n47 [label="scope (FieldAccessExpr)"];
n44 -> n47;
n48 [label="name (SimpleName)"];
n47 -> n48;
n49 [label="identifier='out'"];
n48 -> n49;
n50 [label="scope (NameExpr)"];
n47 -> n50;
n51 [label="name (SimpleName)"];
n50 -> n51;
n52 [label="identifier='System'"];
n51 -> n52;
n53 [label="arguments"];
n44 -> n53;
n54 [label="argument (StringLiteralExpr)"];
n53 -> n54;
n55 [label="value='Hello World!'"];
n54 -> n55;
n56 [label="statement (IfStmt)"];
n42 -> n56;
n57 [label="condition (BinaryExpr)"];
n56 -> n57;
n58 [label="operator='OR'"];
n57 -> n58;
n59 [label="left (BinaryExpr)"];
n57 -> n59;
n60 [label="operator='LESS'"];
n59 -> n60;
n61 [label="left (NameExpr)"];
n59 -> n61;
n62 [label="name (SimpleName)"];
n61 -> n62;
n63 [label="identifier='a'"];
n62 -> n63;
n64 [label="right (IntegerLiteralExpr)"];
n59 -> n64;
n65 [label="value='10'"];
n64 -> n65;
n66 [label="right (BinaryExpr)"];
n57 -> n66;
n67 [label="operator='LESS'"];
n66 -> n67;
n68 [label="left (NameExpr)"];
n66 -> n68;
n69 [label="name (SimpleName)"];
n68 -> n69;
n70 [label="identifier='b'"];
n69 -> n70;
n71 [label="right (IntegerLiteralExpr)"];
n66 -> n71;
n72 [label="value='5'"];
n71 -> n72;
n73 [label="thenStmt (BlockStmt)"];
n56 -> n73;
n74 [label="statements"];
n73 -> n74;
n75 [label="statement (ExpressionStmt)"];
n74 -> n75;
n76 [label="expression (MethodCallExpr)"];
n75 -> n76;
n77 [label="name (SimpleName)"];
n76 -> n77;
n78 [label="identifier='println'"];
n77 -> n78;
n79 [label="scope (FieldAccessExpr)"];
n76 -> n79;
n80 [label="name (SimpleName)"];
n79 -> n80;
n81 [label="identifier='out'"];
n80 -> n81;
n82 [label="scope (NameExpr)"];
n79 -> n82;
n83 [label="name (SimpleName)"];
n82 -> n83;
n84 [label="identifier='System'"];
n83 -> n84;
n85 [label="arguments"];
n76 -> n85;
n86 [label="argument (StringLiteralExpr)"];
n85 -> n86;
n87 [label="value='a é menor que 10'"];
n86 -> n87;
n88 [label="type (VoidType)"];
n40 -> n88;
n89 [label="name (SimpleName)"];
n40 -> n89;
n90 [label="identifier='main'"];
n89 -> n90;
n91 [label="modifiers"];
n40 -> n91;
n92 [label="modifier (Modifier)"];
n91 -> n92;
n93 [label="keyword='PUBLIC'"];
n92 -> n93;
n94 [label="modifier (Modifier)"];
n91 -> n94;
n95 [label="keyword='STATIC'"];
n94 -> n95;
n96 [label="parameters"];
n40 -> n96;
n97 [label="parameter (Parameter)"];
n96 -> n97;
n98 [label="isVarArgs='false'"];
n97 -> n98;
n99 [label="name (SimpleName)"];
n97 -> n99;
n100 [label="identifier='args'"];
n99 -> n100;
n101 [label="type (ArrayType)"];
n97 -> n101;
n102 [label="origin='TYPE'"];
n101 -> n102;
n103 [label="componentType (ClassOrInterfaceType)"];
n101 -> n103;
n104 [label="name (SimpleName)"];
n103 -> n104;
n105 [label="identifier='String'"];
n104 -> n105;
n106 [label="member (MethodDeclaration)"];
n9 -> n106;
n107 [label="body (BlockStmt)"];
n106 -> n107;
n108 [label="statements"];
n107 -> n108;
n109 [label="statement (IfStmt)"];
n108 -> n109;
n110 [label="condition (BinaryExpr)"];
n109 -> n110;
n111 [label="operator='AND'"];
n110 -> n111;
n112 [label="left (BinaryExpr)"];
n110 -> n112;
n113 [label="operator='LESS'"];
n112 -> n113;
n114 [label="left (NameExpr)"];
n112 -> n114;
n115 [label="name (SimpleName)"];
n114 -> n115;
n116 [label="identifier='a'"];
n115 -> n116;
n117 [label="right (IntegerLiteralExpr)"];
n112 -> n117;
n118 [label="value='10'"];
n117 -> n118;
n119 [label="right (BinaryExpr)"];
n110 -> n119;
n120 [label="operator='EQUALS'"];
n119 -> n120;
n121 [label="left (NameExpr)"];
n119 -> n121;
n122 [label="name (SimpleName)"];
n121 -> n122;
n123 [label="identifier='b'"];
n122 -> n123;
n124 [label="right (IntegerLiteralExpr)"];
n119 -> n124;
n125 [label="value='5'"];
n124 -> n125;
n126 [label="thenStmt (BlockStmt)"];
n109 -> n126;
n127 [label="statements"];
n126 -> n127;
n128 [label="statement (ExpressionStmt)"];
n127 -> n128;
n129 [label="expression (MethodCallExpr)"];
n128 -> n129;
n130 [label="name (SimpleName)"];
n129 -> n130;
n131 [label="identifier='println'"];
n130 -> n131;
n132 [label="scope (FieldAccessExpr)"];
n129 -> n132;
n133 [label="name (SimpleName)"];
n132 -> n133;
n134 [label="identifier='out'"];
n133 -> n134;
n135 [label="scope (NameExpr)"];
n132 -> n135;
n136 [label="name (SimpleName)"];
n135 -> n136;
n137 [label="identifier='System'"];
n136 -> n137;
n138 [label="arguments"];
n129 -> n138;
n139 [label="argument (StringLiteralExpr)"];
n138 -> n139;
n140 [label="value='a é menor que 10'"];
n139 -> n140;
n141 [label="statement (IfStmt)"];
n127 -> n141;
n142 [label="condition (BinaryExpr)"];
n141 -> n142;
n143 [label="operator='GREATER'"];
n142 -> n143;
n144 [label="left (NameExpr)"];
n142 -> n144;
n145 [label="name (SimpleName)"];
n144 -> n145;
n146 [label="identifier='b'"];
n145 -> n146;
n147 [label="right (IntegerLiteralExpr)"];
n142 -> n147;
n148 [label="value='1'"];
n147 -> n148;
n149 [label="thenStmt (BlockStmt)"];
n141 -> n149;
n150 [label="statements"];
n149 -> n150;
n151 [label="statement (ExpressionStmt)"];
n150 -> n151;
n152 [label="expression (MethodCallExpr)"];
n151 -> n152;
n153 [label="name (SimpleName)"];
n152 -> n153;
n154 [label="identifier='println'"];
n153 -> n154;
n155 [label="scope (FieldAccessExpr)"];
n152 -> n155;
n156 [label="name (SimpleName)"];
n155 -> n156;
n157 [label="identifier='out'"];
n156 -> n157;
n158 [label="scope (NameExpr)"];
n155 -> n158;
n159 [label="name (SimpleName)"];
n158 -> n159;
n160 [label="identifier='System'"];
n159 -> n160;
n161 [label="arguments"];
n152 -> n161;
n162 [label="argument (NameExpr)"];
n161 -> n162;
n163 [label="name (SimpleName)"];
n162 -> n163;
n164 [label="identifier='b'"];
n163 -> n164;
n165 [label="statement (IfStmt)"];
n150 -> n165;
n166 [label="condition (BinaryExpr)"];
n165 -> n166;
n167 [label="operator='EQUALS'"];
n166 -> n167;
n168 [label="left (NameExpr)"];
n166 -> n168;
n169 [label="name (SimpleName)"];
n168 -> n169;
n170 [label="identifier='b'"];
n169 -> n170;
n171 [label="right (IntegerLiteralExpr)"];
n166 -> n171;
n172 [label="value='1'"];
n171 -> n172;
n173 [label="thenStmt (BlockStmt)"];
n165 -> n173;
n174 [label="statements"];
n173 -> n174;
n175 [label="statement (ExpressionStmt)"];
n174 -> n175;
n176 [label="expression (MethodCallExpr)"];
n175 -> n176;
n177 [label="name (SimpleName)"];
n176 -> n177;
n178 [label="identifier='println'"];
n177 -> n178;
n179 [label="scope (FieldAccessExpr)"];
n176 -> n179;
n180 [label="name (SimpleName)"];
n179 -> n180;
n181 [label="identifier='out'"];
n180 -> n181;
n182 [label="scope (NameExpr)"];
n179 -> n182;
n183 [label="name (SimpleName)"];
n182 -> n183;
n184 [label="identifier='System'"];
n183 -> n184;
n185 [label="arguments"];
n176 -> n185;
n186 [label="argument (NameExpr)"];
n185 -> n186;
n187 [label="name (SimpleName)"];
n186 -> n187;
n188 [label="identifier='b'"];
n187 -> n188;
n189 [label="type (VoidType)"];
n106 -> n189;
n190 [label="name (SimpleName)"];
n106 -> n190;
n191 [label="identifier='funcaoNestedIfs'"];
n190 -> n191;
n192 [label="modifiers"];
n106 -> n192;
n193 [label="modifier (Modifier)"];
n192 -> n193;
n194 [label="keyword='PUBLIC'"];
n193 -> n194;
n195 [label="modifier (Modifier)"];
n192 -> n195;
n196 [label="keyword='STATIC'"];
n195 -> n196;
n197 [label="member (MethodDeclaration)"];
n9 -> n197;
n198 [label="body (BlockStmt)"];
n197 -> n198;
n199 [label="statements"];
n198 -> n199;
n200 [label="statement (IfStmt)"];
n199 -> n200;
n201 [label="condition (BinaryExpr)"];
n200 -> n201;
n202 [label="operator='LESS'"];
n201 -> n202;
n203 [label="left (NameExpr)"];
n201 -> n203;
n204 [label="name (SimpleName)"];
n203 -> n204;
n205 [label="identifier='a'"];
n204 -> n205;
n206 [label="right (IntegerLiteralExpr)"];
n201 -> n206;
n207 [label="value='1'"];
n206 -> n207;
n208 [label="elseStmt (BlockStmt)"];
n200 -> n208;
n209 [label="statements"];
n208 -> n209;
n210 [label="statement (IfStmt)"];
n209 -> n210;
n211 [label="condition (BinaryExpr)"];
n210 -> n211;
n212 [label="operator='GREATER'"];
n211 -> n212;
n213 [label="left (NameExpr)"];
n211 -> n213;
n214 [label="name (SimpleName)"];
n213 -> n214;
n215 [label="identifier='b'"];
n214 -> n215;
n216 [label="right (IntegerLiteralExpr)"];
n211 -> n216;
n217 [label="value='1'"];
n216 -> n217;
n218 [label="thenStmt (BlockStmt)"];
n210 -> n218;
n219 [label="statements"];
n218 -> n219;
n220 [label="statement (ExpressionStmt)"];
n219 -> n220;
n221 [label="expression (MethodCallExpr)"];
n220 -> n221;
n222 [label="name (SimpleName)"];
n221 -> n222;
n223 [label="identifier='println'"];
n222 -> n223;
n224 [label="scope (FieldAccessExpr)"];
n221 -> n224;
n225 [label="name (SimpleName)"];
n224 -> n225;
n226 [label="identifier='out'"];
n225 -> n226;
n227 [label="scope (NameExpr)"];
n224 -> n227;
n228 [label="name (SimpleName)"];
n227 -> n228;
n229 [label="identifier='System'"];
n228 -> n229;
n230 [label="arguments"];
n221 -> n230;
n231 [label="argument (NameExpr)"];
n230 -> n231;
n232 [label="name (SimpleName)"];
n231 -> n232;
n233 [label="identifier='b'"];
n232 -> n233;
n234 [label="statement (IfStmt)"];
n209 -> n234;
n235 [label="condition (BinaryExpr)"];
n234 -> n235;
n236 [label="operator='EQUALS'"];
n235 -> n236;
n237 [label="left (NameExpr)"];
n235 -> n237;
n238 [label="name (SimpleName)"];
n237 -> n238;
n239 [label="identifier='b'"];
n238 -> n239;
n240 [label="right (IntegerLiteralExpr)"];
n235 -> n240;
n241 [label="value='1'"];
n240 -> n241;
n242 [label="thenStmt (BlockStmt)"];
n234 -> n242;
n243 [label="statements"];
n242 -> n243;
n244 [label="statement (ExpressionStmt)"];
n243 -> n244;
n245 [label="expression (MethodCallExpr)"];
n244 -> n245;
n246 [label="name (SimpleName)"];
n245 -> n246;
n247 [label="identifier='println'"];
n246 -> n247;
n248 [label="scope (FieldAccessExpr)"];
n245 -> n248;
n249 [label="name (SimpleName)"];
n248 -> n249;
n250 [label="identifier='out'"];
n249 -> n250;
n251 [label="scope (NameExpr)"];
n248 -> n251;
n252 [label="name (SimpleName)"];
n251 -> n252;
n253 [label="identifier='System'"];
n252 -> n253;
n254 [label="arguments"];
n245 -> n254;
n255 [label="argument (NameExpr)"];
n254 -> n255;
n256 [label="name (SimpleName)"];
n255 -> n256;
n257 [label="identifier='b'"];
n256 -> n257;
n258 [label="thenStmt (BlockStmt)"];
n200 -> n258;
n259 [label="statements"];
n258 -> n259;
n260 [label="statement (ExpressionStmt)"];
n259 -> n260;
n261 [label="expression (MethodCallExpr)"];
n260 -> n261;
n262 [label="name (SimpleName)"];
n261 -> n262;
n263 [label="identifier='println'"];
n262 -> n263;
n264 [label="scope (FieldAccessExpr)"];
n261 -> n264;
n265 [label="name (SimpleName)"];
n264 -> n265;
n266 [label="identifier='out'"];
n265 -> n266;
n267 [label="scope (NameExpr)"];
n264 -> n267;
n268 [label="name (SimpleName)"];
n267 -> n268;
n269 [label="identifier='System'"];
n268 -> n269;
n270 [label="arguments"];
n261 -> n270;
n271 [label="argument (NameExpr)"];
n270 -> n271;
n272 [label="name (SimpleName)"];
n271 -> n272;
n273 [label="identifier='a'"];
n272 -> n273;
n274 [label="type (VoidType)"];
n197 -> n274;
n275 [label="name (SimpleName)"];
n197 -> n275;
n276 [label="identifier='funcaoIfElseNested'"];
n275 -> n276;
n277 [label="modifiers"];
n197 -> n277;
n278 [label="modifier (Modifier)"];
n277 -> n278;
n279 [label="keyword='PUBLIC'"];
n278 -> n279;
n280 [label="modifier (Modifier)"];
n277 -> n280;
n281 [label="keyword='STATIC'"];
n280 -> n281;
n282 [label="member (MethodDeclaration)"];
n9 -> n282;
n283 [label="body (BlockStmt)"];
n282 -> n283;
n284 [label="statements"];
n283 -> n284;
n285 [label="statement (ExpressionStmt)"];
n284 -> n285;
n286 [label="expression (MethodCallExpr)"];
n285 -> n286;
n287 [label="name (SimpleName)"];
n286 -> n287;
n288 [label="identifier='println'"];
n287 -> n288;
n289 [label="scope (FieldAccessExpr)"];
n286 -> n289;
n290 [label="name (SimpleName)"];
n289 -> n290;
n291 [label="identifier='out'"];
n290 -> n291;
n292 [label="scope (NameExpr)"];
n289 -> n292;
n293 [label="name (SimpleName)"];
n292 -> n293;
n294 [label="identifier='System'"];
n293 -> n294;
n295 [label="arguments"];
n286 -> n295;
n296 [label="argument (StringLiteralExpr)"];
n295 -> n296;
n297 [label="value='Hello World!'"];
n296 -> n297;
n298 [label="statement (IfStmt)"];
n284 -> n298;
n299 [label="condition (BinaryExpr)"];
n298 -> n299;
n300 [label="operator='LESS'"];
n299 -> n300;
n301 [label="left (NameExpr)"];
n299 -> n301;
n302 [label="name (SimpleName)"];
n301 -> n302;
n303 [label="identifier='a'"];
n302 -> n303;
n304 [label="right (IntegerLiteralExpr)"];
n299 -> n304;
n305 [label="value='10'"];
n304 -> n305;
n306 [label="elseStmt (IfStmt)"];
n298 -> n306;
n307 [label="condition (BinaryExpr)"];
n306 -> n307;
n308 [label="operator='OR'"];
n307 -> n308;
n309 [label="left (BinaryExpr)"];
n307 -> n309;
n310 [label="operator='GREATER'"];
n309 -> n310;
n311 [label="left (NameExpr)"];
n309 -> n311;
n312 [label="name (SimpleName)"];
n311 -> n312;
n313 [label="identifier='b'"];
n312 -> n313;
n314 [label="right (IntegerLiteralExpr)"];
n309 -> n314;
n315 [label="value='10'"];
n314 -> n315;
n316 [label="right (BinaryExpr)"];
n307 -> n316;
n317 [label="operator='EQUALS'"];
n316 -> n317;
n318 [label="left (NameExpr)"];
n316 -> n318;
n319 [label="name (SimpleName)"];
n318 -> n319;
n320 [label="identifier='b'"];
n319 -> n320;
n321 [label="right (IntegerLiteralExpr)"];
n316 -> n321;
n322 [label="value='10'"];
n321 -> n322;
n323 [label="elseStmt (IfStmt)"];
n306 -> n323;
n324 [label="condition (BinaryExpr)"];
n323 -> n324;
n325 [label="operator='NOT_EQUALS'"];
n324 -> n325;
n326 [label="left (NameExpr)"];
n324 -> n326;
n327 [label="name (SimpleName)"];
n326 -> n327;
n328 [label="identifier='b'"];
n327 -> n328;
n329 [label="right (NameExpr)"];
n324 -> n329;
n330 [label="name (SimpleName)"];
n329 -> n330;
n331 [label="identifier='a'"];
n330 -> n331;
n332 [label="elseStmt (BlockStmt)"];
n323 -> n332;
n333 [label="statements"];
n332 -> n333;
n334 [label="statement (ExpressionStmt)"];
n333 -> n334;
n335 [label="expression (MethodCallExpr)"];
n334 -> n335;
n336 [label="name (SimpleName)"];
n335 -> n336;
n337 [label="identifier='println'"];
n336 -> n337;
n338 [label="scope (FieldAccessExpr)"];
n335 -> n338;
n339 [label="name (SimpleName)"];
n338 -> n339;
n340 [label="identifier='out'"];
n339 -> n340;
n341 [label="scope (NameExpr)"];
n338 -> n341;
n342 [label="name (SimpleName)"];
n341 -> n342;
n343 [label="identifier='System'"];
n342 -> n343;
n344 [label="arguments"];
n335 -> n344;
n345 [label="argument (StringLiteralExpr)"];
n344 -> n345;
n346 [label="value='else sem if'"];
n345 -> n346;
n347 [label="thenStmt (BlockStmt)"];
n323 -> n347;
n348 [label="statements"];
n347 -> n348;
n349 [label="statement (ExpressionStmt)"];
n348 -> n349;
n350 [label="expression (MethodCallExpr)"];
n349 -> n350;
n351 [label="name (SimpleName)"];
n350 -> n351;
n352 [label="identifier='println'"];
n351 -> n352;
n353 [label="scope (FieldAccessExpr)"];
n350 -> n353;
n354 [label="name (SimpleName)"];
n353 -> n354;
n355 [label="identifier='out'"];
n354 -> n355;
n356 [label="scope (NameExpr)"];
n353 -> n356;
n357 [label="name (SimpleName)"];
n356 -> n357;
n358 [label="identifier='System'"];
n357 -> n358;
n359 [label="arguments"];
n350 -> n359;
n360 [label="argument (StringLiteralExpr)"];
n359 -> n360;
n361 [label="value='boolean1 é true'"];
n360 -> n361;
n362 [label="thenStmt (BlockStmt)"];
n306 -> n362;
n363 [label="statements"];
n362 -> n363;
n364 [label="statement (ExpressionStmt)"];
n363 -> n364;
n365 [label="expression (MethodCallExpr)"];
n364 -> n365;
n366 [label="name (SimpleName)"];
n365 -> n366;
n367 [label="identifier='println'"];
n366 -> n367;
n368 [label="scope (FieldAccessExpr)"];
n365 -> n368;
n369 [label="name (SimpleName)"];
n368 -> n369;
n370 [label="identifier='out'"];
n369 -> n370;
n371 [label="scope (NameExpr)"];
n368 -> n371;
n372 [label="name (SimpleName)"];
n371 -> n372;
n373 [label="identifier='System'"];
n372 -> n373;
n374 [label="arguments"];
n365 -> n374;
n375 [label="argument (StringLiteralExpr)"];
n374 -> n375;
n376 [label="value='boolean1 é true'"];
n375 -> n376;
n377 [label="thenStmt (BlockStmt)"];
n298 -> n377;
n378 [label="statements"];
n377 -> n378;
n379 [label="statement (ExpressionStmt)"];
n378 -> n379;
n380 [label="expression (MethodCallExpr)"];
n379 -> n380;
n381 [label="name (SimpleName)"];
n380 -> n381;
n382 [label="identifier='println'"];
n381 -> n382;
n383 [label="scope (FieldAccessExpr)"];
n380 -> n383;
n384 [label="name (SimpleName)"];
n383 -> n384;
n385 [label="identifier='out'"];
n384 -> n385;
n386 [label="scope (NameExpr)"];
n383 -> n386;
n387 [label="name (SimpleName)"];
n386 -> n387;
n388 [label="identifier='System'"];
n387 -> n388;
n389 [label="arguments"];
n380 -> n389;
n390 [label="argument (StringLiteralExpr)"];
n389 -> n390;
n391 [label="value='a é menor que 10'"];
n390 -> n391;
n392 [label="type (VoidType)"];
n282 -> n392;
n393 [label="name (SimpleName)"];
n282 -> n393;
n394 [label="identifier='funcaoIfElseIf'"];
n393 -> n394;
n395 [label="modifiers"];
n282 -> n395;
n396 [label="modifier (Modifier)"];
n395 -> n396;
n397 [label="keyword='PUBLIC'"];
n396 -> n397;
n398 [label="modifier (Modifier)"];
n395 -> n398;
n399 [label="keyword='STATIC'"];
n398 -> n399;
n400 [label="member (MethodDeclaration)"];
n9 -> n400;
n401 [label="body (BlockStmt)"];
n400 -> n401;
n402 [label="statements"];
n401 -> n402;
n403 [label="statement (IfStmt)"];
n402 -> n403;
n404 [label="condition (BinaryExpr)"];
n403 -> n404;
n405 [label="operator='OR'"];
n404 -> n405;
n406 [label="left (NameExpr)"];
n404 -> n406;
n407 [label="name (SimpleName)"];
n406 -> n407;
n408 [label="identifier='boolean1'"];
n407 -> n408;
n409 [label="right (BinaryExpr)"];
n404 -> n409;
n410 [label="operator='EQUALS'"];
n409 -> n410;
n411 [label="left (NameExpr)"];
n409 -> n411;
n412 [label="name (SimpleName)"];
n411 -> n412;
n413 [label="identifier='a'"];
n412 -> n413;
n414 [label="right (NameExpr)"];
n409 -> n414;
n415 [label="name (SimpleName)"];
n414 -> n415;
n416 [label="identifier='b'"];
n415 -> n416;
n417 [label="thenStmt (BlockStmt)"];
n403 -> n417;
n418 [label="statements"];
n417 -> n418;
n419 [label="statement (ExpressionStmt)"];
n418 -> n419;
n420 [label="expression (MethodCallExpr)"];
n419 -> n420;
n421 [label="name (SimpleName)"];
n420 -> n421;
n422 [label="identifier='println'"];
n421 -> n422;
n423 [label="scope (FieldAccessExpr)"];
n420 -> n423;
n424 [label="name (SimpleName)"];
n423 -> n424;
n425 [label="identifier='out'"];
n424 -> n425;
n426 [label="scope (NameExpr)"];
n423 -> n426;
n427 [label="name (SimpleName)"];
n426 -> n427;
n428 [label="identifier='System'"];
n427 -> n428;
n429 [label="arguments"];
n420 -> n429;
n430 [label="argument (StringLiteralExpr)"];
n429 -> n430;
n431 [label="value='funcaoIfmultiplasCondicoes'"];
n430 -> n431;
n432 [label="type (VoidType)"];
n400 -> n432;
n433 [label="name (SimpleName)"];
n400 -> n433;
n434 [label="identifier='funcaoIfmultiplasCondicoes'"];
n433 -> n434;
n435 [label="modifiers"];
n400 -> n435;
n436 [label="modifier (Modifier)"];
n435 -> n436;
n437 [label="keyword='PUBLIC'"];
n436 -> n437;
n438 [label="modifier (Modifier)"];
n435 -> n438;
n439 [label="keyword='STATIC'"];
n438 -> n439;
n440 [label="modifiers"];
n5 -> n440;
n441 [label="modifier (Modifier)"];
n440 -> n441;
n442 [label="keyword='PUBLIC'"];
n441 -> n442;
}